// Code generated by protoc-gen-go. DO NOT EDIT.
// source: luna.proto

package lunapb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Supported audio encodings. Unless otherwise noted, the sample rate is
// defined by the voice model.
type SynthesizerConfig_AudioEncoding int32

const (
	// Raw (headerless) uncompressed 16-bit signed little endian samples (linear
	// PCM), single channel.
	SynthesizerConfig_RAW_LINEAR16 SynthesizerConfig_AudioEncoding = 0
	// Raw (headerless) uncompressed 32-bit floating-point little endian samples
	// (PCM), single channel.
	SynthesizerConfig_RAW_FLOAT32 SynthesizerConfig_AudioEncoding = 1
)

var SynthesizerConfig_AudioEncoding_name = map[int32]string{
	0: "RAW_LINEAR16",
	1: "RAW_FLOAT32",
}

var SynthesizerConfig_AudioEncoding_value = map[string]int32{
	"RAW_LINEAR16": 0,
	"RAW_FLOAT32":  1,
}

func (x SynthesizerConfig_AudioEncoding) String() string {
	return proto.EnumName(SynthesizerConfig_AudioEncoding_name, int32(x))
}

func (SynthesizerConfig_AudioEncoding) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8ac2cc9edf97f76d, []int{3, 0}
}

// The top-level message sent by the client for the `Version` method.
type VersionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionRequest) Reset()         { *m = VersionRequest{} }
func (m *VersionRequest) String() string { return proto.CompactTextString(m) }
func (*VersionRequest) ProtoMessage()    {}
func (*VersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ac2cc9edf97f76d, []int{0}
}

func (m *VersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionRequest.Unmarshal(m, b)
}
func (m *VersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionRequest.Marshal(b, m, deterministic)
}
func (m *VersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionRequest.Merge(m, src)
}
func (m *VersionRequest) XXX_Size() int {
	return xxx_messageInfo_VersionRequest.Size(m)
}
func (m *VersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VersionRequest proto.InternalMessageInfo

// The top-level message sent by the client for the `ListVoices` method.
type ListVoicesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListVoicesRequest) Reset()         { *m = ListVoicesRequest{} }
func (m *ListVoicesRequest) String() string { return proto.CompactTextString(m) }
func (*ListVoicesRequest) ProtoMessage()    {}
func (*ListVoicesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ac2cc9edf97f76d, []int{1}
}

func (m *ListVoicesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVoicesRequest.Unmarshal(m, b)
}
func (m *ListVoicesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVoicesRequest.Marshal(b, m, deterministic)
}
func (m *ListVoicesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVoicesRequest.Merge(m, src)
}
func (m *ListVoicesRequest) XXX_Size() int {
	return xxx_messageInfo_ListVoicesRequest.Size(m)
}
func (m *ListVoicesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVoicesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListVoicesRequest proto.InternalMessageInfo

// The top-level message sent by the client for the `Synthesize` and
// `SynthesizeStream` methods.
type SynthesizeRequest struct {
	// Provides configuration for the text-to-speech engine.
	Config *SynthesizerConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	// The text to generate speech for.
	Text                 string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SynthesizeRequest) Reset()         { *m = SynthesizeRequest{} }
func (m *SynthesizeRequest) String() string { return proto.CompactTextString(m) }
func (*SynthesizeRequest) ProtoMessage()    {}
func (*SynthesizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ac2cc9edf97f76d, []int{2}
}

func (m *SynthesizeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SynthesizeRequest.Unmarshal(m, b)
}
func (m *SynthesizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SynthesizeRequest.Marshal(b, m, deterministic)
}
func (m *SynthesizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SynthesizeRequest.Merge(m, src)
}
func (m *SynthesizeRequest) XXX_Size() int {
	return xxx_messageInfo_SynthesizeRequest.Size(m)
}
func (m *SynthesizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SynthesizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SynthesizeRequest proto.InternalMessageInfo

func (m *SynthesizeRequest) GetConfig() *SynthesizerConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *SynthesizeRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

// Configuration for setting up the text-to-speech engine.
type SynthesizerConfig struct {
	VoiceId string `protobuf:"bytes,1,opt,name=voice_id,json=voiceId,proto3" json:"voice_id,omitempty"`
	// Encoding of the synthesized speech. If not specified, defaults to
	// RAW_FLOAT32.
	Encoding SynthesizerConfig_AudioEncoding `protobuf:"varint,2,opt,name=encoding,proto3,enum=cobaltspeech.luna.SynthesizerConfig_AudioEncoding" json:"encoding,omitempty"`
	// Optional field for streaming synthesis. If not zero, waits until
	// n_samples are generated before sending the audio data to the client.
	// In the case that the entire generated audio is less than n_samples,
	// the samples will be returned when synthesis is complete.
	NSamples             uint64   `protobuf:"varint,3,opt,name=n_samples,json=nSamples,proto3" json:"n_samples,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SynthesizerConfig) Reset()         { *m = SynthesizerConfig{} }
func (m *SynthesizerConfig) String() string { return proto.CompactTextString(m) }
func (*SynthesizerConfig) ProtoMessage()    {}
func (*SynthesizerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ac2cc9edf97f76d, []int{3}
}

func (m *SynthesizerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SynthesizerConfig.Unmarshal(m, b)
}
func (m *SynthesizerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SynthesizerConfig.Marshal(b, m, deterministic)
}
func (m *SynthesizerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SynthesizerConfig.Merge(m, src)
}
func (m *SynthesizerConfig) XXX_Size() int {
	return xxx_messageInfo_SynthesizerConfig.Size(m)
}
func (m *SynthesizerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SynthesizerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SynthesizerConfig proto.InternalMessageInfo

func (m *SynthesizerConfig) GetVoiceId() string {
	if m != nil {
		return m.VoiceId
	}
	return ""
}

func (m *SynthesizerConfig) GetEncoding() SynthesizerConfig_AudioEncoding {
	if m != nil {
		return m.Encoding
	}
	return SynthesizerConfig_RAW_LINEAR16
}

func (m *SynthesizerConfig) GetNSamples() uint64 {
	if m != nil {
		return m.NSamples
	}
	return 0
}

// The message sent by the server for the `Version` method.
type VersionResponse struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionResponse) Reset()         { *m = VersionResponse{} }
func (m *VersionResponse) String() string { return proto.CompactTextString(m) }
func (*VersionResponse) ProtoMessage()    {}
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ac2cc9edf97f76d, []int{4}
}

func (m *VersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionResponse.Unmarshal(m, b)
}
func (m *VersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionResponse.Marshal(b, m, deterministic)
}
func (m *VersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionResponse.Merge(m, src)
}
func (m *VersionResponse) XXX_Size() int {
	return xxx_messageInfo_VersionResponse.Size(m)
}
func (m *VersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VersionResponse proto.InternalMessageInfo

func (m *VersionResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// The message sent by the server for the `ListVoices` method.
type ListVoicesResponse struct {
	// List of voices available for use that match the request.
	Voices               []*Voice `protobuf:"bytes,1,rep,name=voices,proto3" json:"voices,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListVoicesResponse) Reset()         { *m = ListVoicesResponse{} }
func (m *ListVoicesResponse) String() string { return proto.CompactTextString(m) }
func (*ListVoicesResponse) ProtoMessage()    {}
func (*ListVoicesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ac2cc9edf97f76d, []int{5}
}

func (m *ListVoicesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVoicesResponse.Unmarshal(m, b)
}
func (m *ListVoicesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVoicesResponse.Marshal(b, m, deterministic)
}
func (m *ListVoicesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVoicesResponse.Merge(m, src)
}
func (m *ListVoicesResponse) XXX_Size() int {
	return xxx_messageInfo_ListVoicesResponse.Size(m)
}
func (m *ListVoicesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVoicesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListVoicesResponse proto.InternalMessageInfo

func (m *ListVoicesResponse) GetVoices() []*Voice {
	if m != nil {
		return m.Voices
	}
	return nil
}

// Description of a Luna Voice
type Voice struct {
	// Unique identifier of the voice.  This identifier is used to choose the
	// voice during a synthesis request, and is specified in the
	// `SynthesizerConfig` message.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the voice.  This is a concise name describing the voice, and maybe
	// presented to the end-user, for example, to help which voice to choose for
	// their TTS task.
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Voice) Reset()         { *m = Voice{} }
func (m *Voice) String() string { return proto.CompactTextString(m) }
func (*Voice) ProtoMessage()    {}
func (*Voice) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ac2cc9edf97f76d, []int{6}
}

func (m *Voice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Voice.Unmarshal(m, b)
}
func (m *Voice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Voice.Marshal(b, m, deterministic)
}
func (m *Voice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Voice.Merge(m, src)
}
func (m *Voice) XXX_Size() int {
	return xxx_messageInfo_Voice.Size(m)
}
func (m *Voice) XXX_DiscardUnknown() {
	xxx_messageInfo_Voice.DiscardUnknown(m)
}

var xxx_messageInfo_Voice proto.InternalMessageInfo

func (m *Voice) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Voice) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The message returned to the client by the `Synthesize` and
// `SynthesizeStream` methods.
type SynthesizeResponse struct {
	// Audio samples of the generated speech
	Audio                []byte   `protobuf:"bytes,1,opt,name=audio,proto3" json:"audio,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SynthesizeResponse) Reset()         { *m = SynthesizeResponse{} }
func (m *SynthesizeResponse) String() string { return proto.CompactTextString(m) }
func (*SynthesizeResponse) ProtoMessage()    {}
func (*SynthesizeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ac2cc9edf97f76d, []int{7}
}

func (m *SynthesizeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SynthesizeResponse.Unmarshal(m, b)
}
func (m *SynthesizeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SynthesizeResponse.Marshal(b, m, deterministic)
}
func (m *SynthesizeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SynthesizeResponse.Merge(m, src)
}
func (m *SynthesizeResponse) XXX_Size() int {
	return xxx_messageInfo_SynthesizeResponse.Size(m)
}
func (m *SynthesizeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SynthesizeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SynthesizeResponse proto.InternalMessageInfo

func (m *SynthesizeResponse) GetAudio() []byte {
	if m != nil {
		return m.Audio
	}
	return nil
}

func init() {
	proto.RegisterEnum("cobaltspeech.luna.SynthesizerConfig_AudioEncoding", SynthesizerConfig_AudioEncoding_name, SynthesizerConfig_AudioEncoding_value)
	proto.RegisterType((*VersionRequest)(nil), "cobaltspeech.luna.VersionRequest")
	proto.RegisterType((*ListVoicesRequest)(nil), "cobaltspeech.luna.ListVoicesRequest")
	proto.RegisterType((*SynthesizeRequest)(nil), "cobaltspeech.luna.SynthesizeRequest")
	proto.RegisterType((*SynthesizerConfig)(nil), "cobaltspeech.luna.SynthesizerConfig")
	proto.RegisterType((*VersionResponse)(nil), "cobaltspeech.luna.VersionResponse")
	proto.RegisterType((*ListVoicesResponse)(nil), "cobaltspeech.luna.ListVoicesResponse")
	proto.RegisterType((*Voice)(nil), "cobaltspeech.luna.Voice")
	proto.RegisterType((*SynthesizeResponse)(nil), "cobaltspeech.luna.SynthesizeResponse")
}

func init() { proto.RegisterFile("luna.proto", fileDescriptor_8ac2cc9edf97f76d) }

var fileDescriptor_8ac2cc9edf97f76d = []byte{
	// 439 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0xc5, 0x5d, 0xd7, 0x8f, 0xdb, 0xd1, 0xa5, 0x17, 0x1e, 0xc2, 0x78, 0x29, 0x16, 0x48, 0x15,
	0x93, 0xa2, 0x91, 0x49, 0x3c, 0xf1, 0x52, 0xd0, 0x26, 0x4d, 0xaa, 0x06, 0x72, 0xd1, 0x10, 0xbc,
	0x54, 0x6e, 0x62, 0x36, 0x4b, 0xad, 0x1d, 0x6a, 0x77, 0x02, 0xfe, 0x24, 0xbf, 0x85, 0x7f, 0x80,
	0xe2, 0x78, 0x49, 0xa7, 0x46, 0x85, 0x07, 0xde, 0x7c, 0x8f, 0xef, 0xb9, 0xc7, 0xe7, 0xe4, 0x06,
	0x60, 0xb1, 0x56, 0x3c, 0xca, 0x56, 0xda, 0x6a, 0x1c, 0x24, 0x7a, 0xce, 0x17, 0xd6, 0x64, 0x42,
	0x24, 0x37, 0x51, 0x7e, 0x41, 0x03, 0xe8, 0x5f, 0x89, 0x95, 0x91, 0x5a, 0x31, 0xf1, 0x6d, 0x2d,
	0x8c, 0xa5, 0x8f, 0x60, 0x30, 0x91, 0xc6, 0x5e, 0x69, 0x99, 0x08, 0x73, 0x07, 0x0a, 0x18, 0x4c,
	0x7f, 0x28, 0x7b, 0x23, 0x8c, 0xfc, 0x29, 0x3c, 0x88, 0x6f, 0xa0, 0x95, 0x68, 0xf5, 0x55, 0x5e,
	0x87, 0x64, 0x48, 0x46, 0xbd, 0xf8, 0x79, 0xb4, 0x35, 0x3f, 0xaa, 0x58, 0xab, 0x77, 0xae, 0x97,
	0x79, 0x0e, 0x22, 0x34, 0xad, 0xf8, 0x6e, 0xc3, 0xc6, 0x90, 0x8c, 0xba, 0xcc, 0x9d, 0xe9, 0x2f,
	0xb2, 0xa9, 0xe3, 0x19, 0xf8, 0x04, 0x3a, 0xb7, 0xf9, 0x6b, 0x66, 0x32, 0x75, 0x4a, 0x5d, 0xd6,
	0x76, 0xf5, 0x45, 0x8a, 0x97, 0xd0, 0x11, 0x2a, 0xd1, 0xa9, 0x54, 0xd7, 0x6e, 0x50, 0x3f, 0x8e,
	0xff, 0xe5, 0x11, 0xd1, 0x78, 0x9d, 0x4a, 0x7d, 0xe6, 0x99, 0xac, 0x9c, 0x81, 0x4f, 0xa1, 0xab,
	0x66, 0x86, 0x2f, 0xb3, 0x85, 0x30, 0xe1, 0xde, 0x90, 0x8c, 0x9a, 0xac, 0xa3, 0xa6, 0x45, 0x4d,
	0x63, 0x78, 0x78, 0x8f, 0x87, 0x01, 0x1c, 0xb0, 0xf1, 0xa7, 0xd9, 0xe4, 0xe2, 0xf2, 0x6c, 0xcc,
	0x5e, 0xbd, 0x0e, 0x1e, 0xe0, 0x21, 0xf4, 0x72, 0xe4, 0x7c, 0xf2, 0x7e, 0xfc, 0xf1, 0x34, 0x0e,
	0x08, 0x3d, 0x86, 0xc3, 0x32, 0x5f, 0x93, 0x69, 0x65, 0x04, 0x86, 0xd0, 0xbe, 0x2d, 0xa0, 0xd2,
	0x4d, 0x51, 0xd2, 0x73, 0xc0, 0xcd, 0xe8, 0x7d, 0xff, 0x09, 0xb4, 0x9c, 0x5d, 0x13, 0x92, 0xe1,
	0xde, 0xa8, 0x17, 0x87, 0x35, 0x0e, 0x1d, 0x85, 0xf9, 0x3e, 0x7a, 0x0c, 0xfb, 0x0e, 0xc0, 0x3e,
	0x34, 0xca, 0xcc, 0x1a, 0x32, 0xcd, 0x33, 0x57, 0x7c, 0x29, 0xee, 0x32, 0xcf, 0xcf, 0xf4, 0x25,
	0xe0, 0xe6, 0xa7, 0xf5, 0xa2, 0x8f, 0x61, 0x9f, 0xe7, 0x5e, 0x1d, 0xf9, 0x80, 0x15, 0x45, 0xfc,
	0xbb, 0x01, 0xcd, 0xc9, 0x5a, 0x71, 0xfc, 0x00, 0x6d, 0x6f, 0x0b, 0x9f, 0xd5, 0x3d, 0xe7, 0xde,
	0x4a, 0x1d, 0xd1, 0x5d, 0x2d, 0x5e, 0xf0, 0x33, 0x40, 0xe5, 0x1d, 0xeb, 0x56, 0x69, 0x6b, 0x2b,
	0x8f, 0x5e, 0xfc, 0xa5, 0xab, 0x1a, 0x5d, 0x39, 0xc4, 0xdd, 0x5b, 0xba, 0x6b, 0x74, 0x4d, 0x4c,
	0x1c, 0x82, 0x0a, 0x9d, 0xda, 0x95, 0xe0, 0xcb, 0xff, 0x2a, 0x70, 0x42, 0xde, 0x76, 0xbe, 0xb4,
	0xf2, 0xcb, 0x6c, 0x3e, 0x6f, 0xb9, 0xbf, 0xf8, 0xf4, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa0,
	0x14, 0xb2, 0x37, 0xd3, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LunaClient is the client API for Luna service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LunaClient interface {
	// Queries the Version of the Server.
	Version(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*VersionResponse, error)
	// Retrieves a list of available text-to-speech voices.
	ListVoices(ctx context.Context, in *ListVoicesRequest, opts ...grpc.CallOption) (*ListVoicesResponse, error)
	// Performs synchronous text-to-speech generation.
	Synthesize(ctx context.Context, in *SynthesizeRequest, opts ...grpc.CallOption) (*SynthesizeResponse, error)
	// Performs streaming text-to-speech generation, where the synthesized
	// speech is streamed to the client as it is being generated.
	SynthesizeStream(ctx context.Context, in *SynthesizeRequest, opts ...grpc.CallOption) (Luna_SynthesizeStreamClient, error)
}

type lunaClient struct {
	cc *grpc.ClientConn
}

func NewLunaClient(cc *grpc.ClientConn) LunaClient {
	return &lunaClient{cc}
}

func (c *lunaClient) Version(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*VersionResponse, error) {
	out := new(VersionResponse)
	err := c.cc.Invoke(ctx, "/cobaltspeech.luna.Luna/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lunaClient) ListVoices(ctx context.Context, in *ListVoicesRequest, opts ...grpc.CallOption) (*ListVoicesResponse, error) {
	out := new(ListVoicesResponse)
	err := c.cc.Invoke(ctx, "/cobaltspeech.luna.Luna/ListVoices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lunaClient) Synthesize(ctx context.Context, in *SynthesizeRequest, opts ...grpc.CallOption) (*SynthesizeResponse, error) {
	out := new(SynthesizeResponse)
	err := c.cc.Invoke(ctx, "/cobaltspeech.luna.Luna/Synthesize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lunaClient) SynthesizeStream(ctx context.Context, in *SynthesizeRequest, opts ...grpc.CallOption) (Luna_SynthesizeStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Luna_serviceDesc.Streams[0], "/cobaltspeech.luna.Luna/SynthesizeStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &lunaSynthesizeStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Luna_SynthesizeStreamClient interface {
	Recv() (*SynthesizeResponse, error)
	grpc.ClientStream
}

type lunaSynthesizeStreamClient struct {
	grpc.ClientStream
}

func (x *lunaSynthesizeStreamClient) Recv() (*SynthesizeResponse, error) {
	m := new(SynthesizeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// LunaServer is the server API for Luna service.
type LunaServer interface {
	// Queries the Version of the Server.
	Version(context.Context, *VersionRequest) (*VersionResponse, error)
	// Retrieves a list of available text-to-speech voices.
	ListVoices(context.Context, *ListVoicesRequest) (*ListVoicesResponse, error)
	// Performs synchronous text-to-speech generation.
	Synthesize(context.Context, *SynthesizeRequest) (*SynthesizeResponse, error)
	// Performs streaming text-to-speech generation, where the synthesized
	// speech is streamed to the client as it is being generated.
	SynthesizeStream(*SynthesizeRequest, Luna_SynthesizeStreamServer) error
}

func RegisterLunaServer(s *grpc.Server, srv LunaServer) {
	s.RegisterService(&_Luna_serviceDesc, srv)
}

func _Luna_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LunaServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cobaltspeech.luna.Luna/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LunaServer).Version(ctx, req.(*VersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Luna_ListVoices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListVoicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LunaServer).ListVoices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cobaltspeech.luna.Luna/ListVoices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LunaServer).ListVoices(ctx, req.(*ListVoicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Luna_Synthesize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SynthesizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LunaServer).Synthesize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cobaltspeech.luna.Luna/Synthesize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LunaServer).Synthesize(ctx, req.(*SynthesizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Luna_SynthesizeStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SynthesizeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LunaServer).SynthesizeStream(m, &lunaSynthesizeStreamServer{stream})
}

type Luna_SynthesizeStreamServer interface {
	Send(*SynthesizeResponse) error
	grpc.ServerStream
}

type lunaSynthesizeStreamServer struct {
	grpc.ServerStream
}

func (x *lunaSynthesizeStreamServer) Send(m *SynthesizeResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Luna_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cobaltspeech.luna.Luna",
	HandlerType: (*LunaServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Version",
			Handler:    _Luna_Version_Handler,
		},
		{
			MethodName: "ListVoices",
			Handler:    _Luna_ListVoices_Handler,
		},
		{
			MethodName: "Synthesize",
			Handler:    _Luna_Synthesize_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SynthesizeStream",
			Handler:       _Luna_SynthesizeStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "luna.proto",
}
